{"version":3,"file":"app.bundle.js","mappings":"mBAAA,MAAMA,EAAS,CAAC,EAGhB,SAASC,EAAGC,EAAWC,GACrBH,EAAOE,GAAaF,EAAOE,IAAc,GACzCF,EAAOE,GAAWE,KAAKD,EACzB,CAeA,SAASE,EAAKH,EAAWI,GACnBN,EAAOE,IACTF,EAAOE,GAAWK,SAASJ,IACzBA,EAAGG,EAAK,GAGd,CC3BA,MAEME,EAAgB,kCAEP,MAAMC,EAEnB,4BAAaC,CAAgBC,GAC3B,MAAMC,EAAwB,IAAIC,gBAAgB,CAChDC,IAAKN,EACLO,KAAM,EACNC,EAAGL,IAECM,EAAY,IAAIC,QAZM,8CAaAN,EAC1B,CACEO,KAAM,SAKV,IACE,MAAMC,QAAiBC,MAAMJ,GACvBK,QAAgBF,EAASG,OAE/B,OAAOd,GAAW,EAAuBa,EAC3C,CAAE,MAAOE,GACP,MAAQ,6BAA4BA,GACtC,CACF,CAGA,QAAO,CAAuBF,GAC5B,MAAMG,EAAe,CAAC,EAkBtB,OAhBAA,EAAaC,KAAQ,GAAEJ,EAAQK,SAASD,SAASJ,EAAQK,SAASC,UAClEH,EAAaI,MAAQC,QAAQR,EAAQS,QAAQC,QAC7CP,EAAaQ,iBAAmBC,OAC9BZ,EAAQK,SAASQ,UAAUC,MAAM,KAAK,GAAGA,MAAM,KAAK,IAEtDX,EAAaY,iBAAmBf,EAAQS,QAAQO,UAAUC,KAC1Dd,EAAae,qBAAuBlB,EAAQS,QAAQO,UAAUG,KAC9DhB,EAAaiB,aAAeC,KAAKC,MAAMtB,EAAQS,QAAQc,QACvDpB,EAAaqB,aAAeH,KAAKC,MAAMtB,EAAQS,QAAQgB,QAGvDtB,EAAauB,MAAQvC,GAAW,EAC9Ba,EACAG,EAAaQ,kBAGRR,CACT,CAGA,QAAO,CAAanB,EAAM2C,GAsBxB,MAhBoB,IALK3C,EAAK4C,SAASC,YAAY,GAAGC,KAAKC,MAAMJ,MACvC3C,EAAK4C,SAASC,YAAY,GAAGC,KAAKC,MAC1D,EACAJ,IAK2BK,KAAKC,IAChC,MAAMC,EAAU,CAAC,EASjB,OAPAA,EAAQP,UAAYf,OAAOqB,EAAKE,KAAKrB,MAAM,KAAK,GAAGA,MAAM,KAAK,IAC9DoB,EAAQ3B,MAAQC,QAAQyB,EAAKvB,QAC7BwB,EAAQlB,UAAYiB,EAAKjB,UAAUC,KACnCiB,EAAQE,cAAgBH,EAAKjB,UAAUG,KACvCe,EAAQG,MAAQhB,KAAKC,MAAMW,EAAKV,QAChCW,EAAQI,MAAQjB,KAAKC,MAAMW,EAAKR,QAEzBS,CAAO,GAIlB,CAGA,+BAAaK,CAAmBC,GAC9B,MAAMC,EAAsB,IAAIlD,gBAAgB,CAC9CC,IAAKN,EACLQ,EAAG8C,IAEC7C,EAAY,IAAIC,QApFI,4CAoF4B6C,EAAqB,CACzE5C,KAAM,SAIR,IACE,MAAMC,QAAiBC,MAAMJ,GACvBK,QAAgBF,EAASG,OAE/B,OAAOd,GAAW,EAAsBa,EAC1C,CAAE,MAAOE,GACP,MAAQ,gCAA+BA,GACzC,CACF,CAEA,QAAO,CAAsBF,GAC3B,MAAO,IAAI,IAAI0C,IAAI1C,EAAQgC,KAAKC,GAAU,GAAEA,EAAK7B,SAAS6B,EAAK3B,aACjE,ECjGF,MAAMqC,EAAcC,SAASC,cAAc,iBACrCC,EAAgBF,SAASC,cAAc,mBAE9B,MAAME,EACnB,gCAAaC,GACX,GAAIL,EAAYM,MAAMC,QAAU,EAAG,CAEjC,MAAMC,QAAwBhE,EAAWoD,mBACvCI,EAAYM,OAId,IAAIH,EAAcM,UAAUnE,SAASoE,GACnCP,EAAcQ,YAAYD,KAE5BF,EAAgBlE,QAAQ8D,GAAO,EACjC,KAEE,IAAID,EAAcM,UAAUnE,SAASoE,GACnCP,EAAcQ,YAAYD,IAGhC,CAEA,QAAO,CAAgBE,GACrB,MAAMC,EAAUZ,SAASa,cAAc,MACvCD,EAAQE,UAAUC,IAAI,UACtBH,EAAQI,UAAYL,EAEpBT,EAAce,YAAYL,EAC5B,CAEA,qBAAOM,CAAeC,GAChBA,EAAEC,OAAON,UAAUO,SAAS,YAC9BC,EAAY,cAAeH,EAAEC,OAAOJ,WACpCb,EAAOoB,sBAEX,CAEA,gCAAaA,GACXxB,EAAYM,MAAQ,GACpBF,EAAOC,qBACT,EAIFL,EAAYyB,iBAAiB,QAASrB,EAAOC,qBAC7CF,EAAcsB,iBAAiB,QAASrB,EAAOe,gBChD/C,MAAMO,EAAezB,SAASC,cAAc,mBACtCyB,EAAoB1B,SAASC,cAAc,wBAElC,MAAM0B,EACnB,yBAAOC,CAAmBC,GACxB,IAAIJ,EAAajB,UAAUnE,SAASoE,GAClCgB,EAAaf,YAAYD,KAE3B,IAAIiB,EAAkBlB,UAAUnE,SAASoE,GACvCiB,EAAkBhB,YAAYD,KAGhCoB,EAAQC,UAAUzF,QAAQsF,GAAU,EACtC,CAEA,QAAO,CAAgBI,EAAaC,GAClC,MAAMpB,EAAUZ,SAASa,cAAc,MACvCD,EAAQE,UAAUC,IAAI,YACtBH,EAAQqB,aAAa,aAAcD,GACnCpB,EAAQI,UAAYe,EAAYvE,KAEhC,MAAM0E,EAAkBlC,SAASa,cAAc,MAC/CqB,EAAgBpB,UAAUC,IAAI,iBAC9BmB,EAAgBD,aAAa,aAAcD,GAC3CE,EAAgBlB,UAAY,IAE5BS,EAAaR,YAAYL,GACzBc,EAAkBT,YAAYiB,EAChC,CAEA,qBAAOC,CAAehB,GACmB,aAAnCA,EAAEC,OAAOgB,aAAa,UACxBd,EACE,iBACAtD,OAAOmD,EAAEC,OAAOgB,aAAa,eAGnC,CAEA,yBAAOC,CAAmBR,GACxB,IAAK,MAAMpE,IAAY,IAAIgE,EAAajB,UAEpCxC,OAAOP,EAAS2E,aAAa,iBAAmBP,EAAQS,gBAExD7E,EAASqD,UAAUC,IAAI,UAEvBtD,EAASqD,UAAUyB,OAAO,SAGhC,CAEA,qBAAOC,CAAerB,GACmB,kBAAnCA,EAAEC,OAAOgB,aAAa,UACxBd,EACE,iBACAtD,OAAOmD,EAAEC,OAAOgB,aAAa,eAGnC,EAIFX,EAAaD,iBAAiB,QAASG,EAAUQ,gBACjDT,EAAkBF,iBAAiB,QAASG,EAAUa,gBAGtDlB,EAAU,qBAAsBK,EAAUC,oBAC1CN,EAAU,qBAAsBK,EAAUU,oBCnE1C,MAAMI,EAAuBzC,SAASC,cAAc,2BAC9CyC,EAAc1C,SAASC,cAAc,iBACrC0C,EAAa3C,SAASC,cAAc,gBAEpC2C,EAAc5C,SAASC,cAAc,iBAE5B,MAAM4C,EACnB,4BAAOC,CAAsBjB,GAC3B,GAAIA,EAAQS,iBAAmB,EAAG,CAChC,MAAMS,EAAgBlB,EAAQC,UAAUD,EAAQS,iBAC1CU,EACmB,MAAvBnB,EAAQoB,WACJF,EAAcvE,aACduE,EAAcnE,aAEpB6D,EAAqBS,UAAa,8FAGtBH,EAAcvF,KAAKU,MAAM,KAAK,4BAC9B6E,EAAcvF,KAAKU,MAAM,KAAK,GAAGiF,kIAIlCJ,EAAc5E,sLAMF4E,EAAczE,+JAKC0E,sFAEGnB,EAAQoB,kFAOjD,IAAIN,EAAWnC,UAAUnE,SAASoE,GAChCkC,EAAWjC,YAAYD,KAGzBsC,EAAcjE,MAAMzC,SAAQ,CAACgD,EAAM2C,KACjCa,EAAOO,eAAe/D,EAAM2C,EAAOH,EAAQoB,WAAW,IAGxDP,EAAYW,WAAa,CAC3B,MACEZ,EAAqBS,UAAY,GACjC,IAAIP,EAAWnC,UAAUnE,SAASoE,GAChCkC,EAAWjC,YAAYD,IAG7B,CAEA,qBAAO2C,CAAe9D,EAAS0C,EAAOsB,GACpC,MAAMC,EAAUvD,SAASa,cAAc,MACjC2C,EAAcX,GAAO,EAAgBvD,EAAQP,UAAWiD,GACxDyB,EAAcZ,GAAO,EAAgBvD,EAASgE,GAEpDC,EAAQL,UAAa,wFAGaO,0EAEGH,+GAKlBhE,EAAQE,sFAIpBgE,0BAIPb,EAAW1B,YAAYsC,EACzB,CAEA,QAAO,CAAgBxE,EAAW2E,GAChC,OAAkB,IAAdA,EACK,MACgB,IAAd3E,EACF,QACEA,EAAY,GACb,GAAEA,OACa,KAAdA,EACF,QAEGA,EAAY,GAAd,KAEZ,CAEA,QAAO,CAAgBO,EAASgE,GAC9B,MAA4B,MAArBA,EAA2BhE,EAAQG,MAAQH,EAAQI,KAC5D,CAEA,oBAAOiE,CAAcxC,GAEjBA,EAAEC,OAAON,UAAUO,SAAS,YAC3BF,EAAEC,OAAON,UAAUO,SAAS,YAE7B,IAAIuB,EAAYpC,UAAUnE,SAASuH,IACjCA,EAAO9C,UAAUyB,OAAO,SAAS,IAEnCpB,EAAEC,OAAON,UAAUC,IAAI,UAEvBO,EAAY,gBAAiBH,EAAEC,OAAOJ,WAE1C,CAEA,oBAAO6C,CAAcC,GACnB,IAAIlB,EAAYpC,UAAUnE,SAASuH,IACjCA,EAAO9C,UAAUyB,OAAO,UACpBqB,EAAO5C,YAAc8C,GACvBF,EAAO9C,UAAUC,IAAI,SACvB,GAEJ,EAIF6B,EAAYpB,iBAAiB,QAASqB,EAAOc,eAG7CrC,EAAU,wBAAyBuB,EAAOC,uBAC1CxB,EAAU,gBAAiBuB,EAAOgB,eCzInB,MAAME,EACnBC,WAAAA,GAA0E,IAA9DC,EAAeC,UAAA5D,OAAA,QAAA6D,IAAAD,UAAA,GAAAA,UAAA,GAAG,GAAI5B,EAAe4B,UAAA5D,OAAA,QAAA6D,IAAAD,UAAA,GAAAA,UAAA,IAAI,EAAGjB,EAAUiB,UAAA5D,OAAA,QAAA6D,IAAAD,UAAA,GAAAA,UAAA,GAAG,IACnEE,KAAKtC,UAAYmC,EACjBG,KAAK9B,gBAAkBA,EACvB8B,KAAKnB,WAAaA,CACpB,CAGAoB,WAAAA,CAAYC,GACVF,KAAKtC,UAAU5F,KAAKoI,EACtB,CAEAC,cAAAA,CAAeC,GACbJ,KAAKtC,UAAU2C,OAAOD,EAAc,EACtC,CAEAE,gBAAAA,CAAiBC,GACfP,KAAKtC,UAAY6C,CACnB,CAEAC,WAAAA,GACE,MAAMC,EAAa,IAAIC,KACvBV,KAAKW,SAAWF,EAAWG,cAAc9G,MAAM,KAAK,EACtD,ECTF,IAAI+G,EAEJ,GAAIC,aAAaC,QAAQ,QAAS,CAChCC,QAAQC,IAAI,4CAEZ,MAAMC,EAAWC,KAAKC,MAAMN,aAAaC,QAAQ,SAC3CJ,EAAWG,aAAaC,QAAQ,QAEtCF,EAAO,IAAIlB,EACTuB,EAASxD,UACTwD,EAAShD,gBACTgD,EAASrC,YAGX,MACMwC,GADa,IAAIX,MACIE,cAAc9G,MAAM,KAAK,GAIpD,GAFAkH,QAAQC,IAAK,aAAYI,sBAA4BV,KAEjDU,IAAYV,GAAYE,EAAKnD,UAAUxB,OACzC,IACEoE,GACF,CAAE,MAAOpH,GACP8H,QAAQC,IAAK,qBAAoB/H,KACjCoI,GACF,MAEAA,IACAN,QAAQC,IAAIJ,EAEhB,MACEG,QAAQC,IAAI,qBAEZJ,EAAO,IAAIlB,EACXzC,EAAY,qBAAsB2D,GAClC3D,EAAY,gBAAiB2D,EAAKhC,YAElCmC,QAAQC,IAAIJ,GAKd,SAASU,IACPV,EAAKL,cACLM,aAAaU,QAAQ,OAAQX,EAAKF,UAClCG,aAAaU,QAAQ,OAAQL,KAAKM,UAAUZ,GAC9C,CAEA,SAASS,IACPpE,EAAY,qBAAsB2D,GAClC3D,EAAY,qBAAsB2D,GAClC3D,EAAY,wBAAyB2D,GACrC3D,EAAY,gBAAiB2D,EAAKhC,WACpC,CAEA6C,eAAepB,IACbU,QAAQC,IAAI,oBAEZ,MAAMU,EAAmBd,EAAKnD,UAAU1C,KAAK3B,GAC3ClB,EAAWC,gBAAgBiB,EAASD,QAEtCyH,EAAKnD,gBAAkBkE,QAAQC,IAAIF,GAEnCJ,IACAD,IAEAN,QAAQC,IAAI,oBACZD,QAAQC,IAAIJ,EACd,CA6DA3D,EAAU,mBAAoBoD,GAC9BpD,EAAU,eA5DVwE,eAA2BnF,GACzB,MAAMuF,QAAoB3J,EAAWC,gBAAgBmE,GAErDsE,EAAKZ,YAAY6B,GACjBjB,EAAK3C,gBAAkB2C,EAAKnD,UAAUxB,OAAS,EAE/CqF,IACAD,IAEAN,QAAQC,IAAI,mBACZD,QAAQC,IAAIJ,EACd,IAkDA3D,EAAU,kBAhDV,SAAwBU,GACtBiD,EAAKV,eAAevC,GACpBiD,EAAK3C,gBACHN,GAASiD,EAAK3C,gBACT2C,EAAK3C,iBAAmB,EACzB2C,EAAK3C,gBAIP2C,EAAK3C,gBAAkB,GAAK1E,QAAQqH,EAAKnD,UAAUxB,UACrD2E,EAAK3C,gBAAkB,GAGzBqD,IACAD,IAEAN,QAAQC,IAAI,qBACZD,QAAQC,IAAIJ,EACd,IA+BA3D,EAAU,kBA7BV,SAAwBU,GAClBA,IAAUiD,EAAK3C,kBACjB2C,EAAK3C,gBAAkBN,EAEvB2D,IACArE,EAAY,qBAAsB2D,GAClC3D,EAAY,wBAAyB2D,GAErCG,QAAQC,IAAK,8BAA6BrD,KAC1CoD,QAAQC,IAAIJ,GAEhB,IAmBA3D,EAAU,iBAjBV,SAAuB6E,GACrBlB,EAAKhC,WAAakD,EAElBR,IACArE,EAAY,qBAAsB2D,GAClC3D,EAAY,wBAAyB2D,GAErCG,QAAQC,IAAK,sBAAqBc,KAClCf,QAAQC,IAAIJ,EACd,G","sources":["webpack://weather-app/./src/assets/Events.js","webpack://weather-app/./src/assets/WeatherAPI.js","webpack://weather-app/./src/assets/Search.js","webpack://weather-app/./src/assets/Locations.js","webpack://weather-app/./src/assets/Hourly.js","webpack://weather-app/./src/assets/User.js","webpack://weather-app/./src/index.js"],"sourcesContent":["const events = {};\n\n// create a new function for a new or existing event name (doesn’t check duplicates)\nfunction on(eventName, fn) {\n  events[eventName] = events[eventName] || [];\n  events[eventName].push(fn);\n}\n\n// remove an event name’s associated function (one instance in this e.g.)\nfunction off(eventName, fn) {\n  if (events[eventName]) {\n    for (let i = 0; i < events[eventName].length; i += 1) {\n      if (events[eventName][i] === fn) {\n        events[eventName].splice(i, 1);\n        break;\n      }\n    }\n  }\n}\n\n// emit a piece of data to all functions on one event name\nfunction emit(eventName, data) {\n  if (events[eventName]) {\n    events[eventName].forEach((fn) => {\n      fn(data);\n    });\n  }\n}\n\nexport { on, off, emit };\n","const weatherForecastEndpoint = 'http://api.weatherapi.com/v1/forecast.json?';\nconst weatherSearchEndpoint = 'http://api.weatherapi.com/v1/search.json?';\nconst weatherApiKey = 'f59714b9ced048d6b83171709230312';\n\nexport default class WeatherAPI {\n  // PUBLIC - use clean location to get all location weather data //\n  static async getLocationData(polishedLocation) {\n    const weatherForecastParams = new URLSearchParams({\n      key: weatherApiKey,\n      days: 2,\n      q: polishedLocation,\n    });\n    const myRequest = new Request(\n      weatherForecastEndpoint + weatherForecastParams,\n      {\n        mode: 'cors',\n      },\n    );\n\n    // fetch forecast //\n    try {\n      const response = await fetch(myRequest);\n      const rawData = await response.json();\n\n      return WeatherAPI.#cleanLocationForecast(rawData);\n    } catch (error) {\n      return `Error in getLocationData: ${error}`;\n    }\n  }\n\n  // PRIVATE - clean the raw monolith of data to useable custom properties //\n  static #cleanLocationForecast(rawData) {\n    const cleanLocData = {};\n\n    cleanLocData.name = `${rawData.location.name}, ${rawData.location.country}`;\n    cleanLocData.isDay = Boolean(rawData.current.is_day);\n    cleanLocData.currentTimeIndex = Number(\n      rawData.location.localtime.split(':')[0].split(' ')[1],\n    );\n    cleanLocData.currentCondition = rawData.current.condition.text;\n    cleanLocData.currentConditionIcon = rawData.current.condition.icon;\n    cleanLocData.currentTempC = Math.round(rawData.current.temp_c);\n    cleanLocData.currentTempF = Math.round(rawData.current.temp_f);\n\n    // pass in private hour array function //\n    cleanLocData.hours = WeatherAPI.#getLocHours(\n      rawData,\n      cleanLocData.currentTimeIndex,\n    );\n\n    return cleanLocData;\n  }\n\n  // PRIVATE - get an array of 24 hours starting at the current hour //\n  static #getLocHours(data, timeIndex) {\n    const hoursFirstDayRaw = data.forecast.forecastday[0].hour.slice(timeIndex);\n    const hoursSecondDayRaw = data.forecast.forecastday[1].hour.slice(\n      0,\n      timeIndex,\n    );\n    const hoursArrRaw = [...hoursFirstDayRaw, ...hoursSecondDayRaw];\n\n    // convert the raw array of hours to a custom array of obj //\n    const hoursArr = hoursArrRaw.map((item) => {\n      const hourObj = {};\n\n      hourObj.timeIndex = Number(item.time.split(':')[0].split(' ')[1]);\n      hourObj.isDay = Boolean(item.is_day);\n      hourObj.condition = item.condition.text;\n      hourObj.conditionIcon = item.condition.icon;\n      hourObj.tempC = Math.round(item.temp_c);\n      hourObj.tempF = Math.round(item.temp_f);\n\n      return hourObj;\n    });\n\n    return hoursArr;\n  }\n\n  // PUBLIC - use user location input to get array of potential matches in API //\n  static async getLocationOptions(rawLocationInput) {\n    const weatherSearchParams = new URLSearchParams({\n      key: weatherApiKey,\n      q: rawLocationInput,\n    });\n    const myRequest = new Request(weatherSearchEndpoint + weatherSearchParams, {\n      mode: 'cors',\n    });\n\n    // fetch search //\n    try {\n      const response = await fetch(myRequest);\n      const rawData = await response.json();\n\n      return WeatherAPI.#cleanLocationOptions(rawData);\n    } catch (error) {\n      return `Error in getLocationOptions: ${error}`;\n    }\n  }\n\n  static #cleanLocationOptions(rawData) {\n    return [...new Set(rawData.map((item) => `${item.name}, ${item.country}`))];\n  }\n}\n","// import modules\nimport WeatherAPI from './WeatherAPI';\nimport * as Events from './Events';\n\n// cache dom\nconst searchInput = document.querySelector('.search-input');\nconst searchResults = document.querySelector('.search-results');\n\nexport default class Search {\n  static async renderLocationNames() {\n    if (searchInput.value.length >= 3) {\n      // fetch search //\n      const locationNameArr = await WeatherAPI.getLocationOptions(\n        searchInput.value,\n      );\n\n      // delete and re-render elements //\n      [...searchResults.children].forEach((child) =>\n        searchResults.removeChild(child),\n      );\n      locationNameArr.forEach(Search.#renderListItem);\n    } else {\n      // delete elements //\n      [...searchResults.children].forEach((child) =>\n        searchResults.removeChild(child),\n      );\n    }\n  }\n\n  static #renderListItem(locationStr) {\n    const newItem = document.createElement('li');\n    newItem.classList.add('result');\n    newItem.innerText = locationStr;\n\n    searchResults.appendChild(newItem);\n  }\n\n  static selectLocation(e) {\n    if (e.target.classList.contains('result')) {\n      Events.emit('addLocation', e.target.innerText);\n      Search.removeSearchResults();\n    }\n  }\n\n  static async removeSearchResults() {\n    searchInput.value = '';\n    Search.renderLocationNames();\n  }\n}\n\n// bind default events\nsearchInput.addEventListener('input', Search.renderLocationNames);\nsearchResults.addEventListener('click', Search.selectLocation);\n","// import modules\nimport * as Events from './Events';\n\n// cache dom\nconst locationList = document.querySelector('.locations-list');\nconst deleteButtonsList = document.querySelector('.delete-buttons-list');\n\nexport default class Locations {\n  static renderLocationList(userObj) {\n    [...locationList.children].forEach((child) =>\n      locationList.removeChild(child),\n    );\n    [...deleteButtonsList.children].forEach((child) =>\n      deleteButtonsList.removeChild(child),\n    );\n\n    userObj.locations.forEach(Locations.#renderListItem);\n  }\n\n  static #renderListItem(locationObj, index) {\n    const newItem = document.createElement('li');\n    newItem.classList.add('location');\n    newItem.setAttribute('data-index', index);\n    newItem.innerText = locationObj.name;\n\n    const newDeleteButton = document.createElement('li');\n    newDeleteButton.classList.add('delete-button');\n    newDeleteButton.setAttribute('data-index', index);\n    newDeleteButton.innerText = 'x';\n\n    locationList.appendChild(newItem);\n    deleteButtonsList.appendChild(newDeleteButton);\n  }\n\n  static changeLocation(e) {\n    if (e.target.getAttribute('class') === 'location') {\n      Events.emit(\n        'moveToLocation',\n        Number(e.target.getAttribute('data-index')),\n      );\n    }\n  }\n\n  static showActiveLocation(userObj) {\n    for (const location of [...locationList.children]) {\n      if (\n        Number(location.getAttribute('data-index')) === userObj.currentLocIndex\n      ) {\n        location.classList.add('active');\n      } else {\n        location.classList.remove('active');\n      }\n    }\n  }\n\n  static deleteLocation(e) {\n    if (e.target.getAttribute('class') === 'delete-button') {\n      Events.emit(\n        'removeLocation',\n        Number(e.target.getAttribute('data-index')),\n      );\n    }\n  }\n}\n\n// bind default events\nlocationList.addEventListener('click', Locations.changeLocation);\ndeleteButtonsList.addEventListener('click', Locations.deleteLocation);\n\n// bind custom events\nEvents.on('renderLocationList', Locations.renderLocationList);\nEvents.on('showActiveLocation', Locations.showActiveLocation);\n","// import modules\nimport * as Events from './Events';\n\n// cache dom\nconst weatherMetaContainer = document.querySelector('.weather-meta-container');\nconst hourlyFrame = document.querySelector('.hourly-frame');\nconst hourlyList = document.querySelector('.hourly-list');\n\nconst tempButtons = document.querySelector('.temp-buttons');\n\nexport default class Hourly {\n  static renderLocationWeather(userObj) {\n    if (userObj.currentLocIndex >= 0) {\n      const currentLocObj = userObj.locations[userObj.currentLocIndex];\n      const currentTemp =\n        userObj.currentDeg === 'C'\n          ? currentLocObj.currentTempC\n          : currentLocObj.currentTempF;\n\n      weatherMetaContainer.innerHTML = `\n        <div class=\"meta-text grid\">\n          <div class=\"text-name\">\n            <h3>${currentLocObj.name.split(',')[0]}</h3>\n            <h4>${currentLocObj.name.split(',')[1].trim()}</h4>\n          </div>\n          <div class=\"text-condition\">\n            <h3>Current Condition:</h3>\n            <p>${currentLocObj.currentCondition}</p>\n          </div>\n        </div>\n        <div class=\"meta-data grid\">\n          <div class=\"data-icon grid\">\n            <img\n              src=\"https://${currentLocObj.currentConditionIcon}\"\n            />\n          </div>\n          <div class=\"data-temp grid\">\n            <p>\n              <span class=\"data-temp-num\">${currentTemp}</span>\n              <sup>o</sup>\n              <span class=\"data-temp-system\">${userObj.currentDeg}</span>\n            </p>\n          </div>\n        </div>\n        `;\n\n      // remove all li from ul, re-render all new li, and then scroll left to start of hours //\n      [...hourlyList.children].forEach((child) =>\n        hourlyList.removeChild(child),\n      );\n\n      currentLocObj.hours.forEach((item, index) => {\n        Hourly.addHourDisplay(item, index, userObj.currentDeg);\n      });\n\n      hourlyFrame.scrollLeft = 0;\n    } else {\n      weatherMetaContainer.innerHTML = '';\n      [...hourlyList.children].forEach((child) =>\n        hourlyList.removeChild(child),\n      );\n    }\n  }\n\n  static addHourDisplay(hourObj, index, currentDegFormat) {\n    const newHour = document.createElement('li');\n    const timeDisplay = Hourly.#getDisplayTime(hourObj.timeIndex, index);\n    const tempDisplay = Hourly.#getDisplayTemp(hourObj, currentDegFormat);\n\n    newHour.innerHTML = `\n    <div class=\"hourly-temp grid\">\n      <p>\n        <span class=\"hour-temp-num\">${tempDisplay}</span>\n        <sup>o</sup>\n        <span class=\"hour-temp-system\">${currentDegFormat}</span>\n      </p>\n    </div>\n    <div class=\"hourly-condition grid\">\n      <img\n        src=\"https://${hourObj.conditionIcon}\"\n      />\n    </div>\n    <div class=\"hourly-time grid\">\n      <p>${timeDisplay}</p>\n    </div>\n    `;\n\n    hourlyList.appendChild(newHour);\n  }\n\n  static #getDisplayTime(timeIndex, itemIndex) {\n    if (itemIndex === 0) {\n      return 'Now';\n    } else if (timeIndex === 0) {\n      return '12 AM';\n    } else if (timeIndex < 12) {\n      return `${timeIndex} AM`;\n    } else if (timeIndex === 12) {\n      return '12 PM';\n    } else {\n      return `${timeIndex - 12} PM`;\n    }\n  }\n\n  static #getDisplayTemp(hourObj, currentDegFormat) {\n    return currentDegFormat === 'C' ? hourObj.tempC : hourObj.tempF;\n  }\n\n  static toggleDegrees(e) {\n    if (\n      e.target.classList.contains('button') &&\n      !e.target.classList.contains('active')\n    ) {\n      [...tempButtons.children].forEach((button) => {\n        button.classList.remove('active');\n      });\n      e.target.classList.add('active');\n\n      Events.emit('toggleDegrees', e.target.innerText);\n    }\n  }\n\n  static renderDegrees(degStr) {\n    [...tempButtons.children].forEach((button) => {\n      button.classList.remove('active');\n      if (button.innerText === degStr) {\n        button.classList.add('active');\n      }\n    });\n  }\n}\n\n// bind default events\ntempButtons.addEventListener('click', Hourly.toggleDegrees);\n\n// bind custom events\nEvents.on('renderLocationWeather', Hourly.renderLocationWeather);\nEvents.on('renderDegrees', Hourly.renderDegrees);\n","export default class User {\n  constructor(locationObjects = [], currentLocIndex = -1, currentDeg = 'C') {\n    this.locations = locationObjects;\n    this.currentLocIndex = currentLocIndex;\n    this.currentDeg = currentDeg;\n  }\n\n  // PUBLIC METHODS //\n  addLocation(processedLocObj) {\n    this.locations.push(processedLocObj);\n  }\n\n  removeLocation(removalIndex) {\n    this.locations.splice(removalIndex, 1);\n  }\n\n  refreshLocations(newLocationArr) {\n    this.locations = newLocationArr;\n  }\n\n  getUserTime() {\n    const appTimeRaw = new Date();\n    this.userTime = appTimeRaw.toISOString().split(':')[0];\n  }\n}\n","// import css\nimport './static/reset.css';\nimport './static/style.css';\n\n// import modules\nimport * as Events from './assets/Events';\nimport WeatherAPI from './assets/WeatherAPI';\nimport Search from './assets/Search';\nimport Locations from './assets/Locations';\nimport Hourly from './assets/Hourly';\nimport User from './assets/User';\n\n// ----------------------- INIT APP ----------------------- //\n\nlet user;\n\nif (localStorage.getItem('user')) {\n  console.log('getting user from localStorage with time'); // DEBUGGING\n\n  const userInfo = JSON.parse(localStorage.getItem('user'));\n  const userTime = localStorage.getItem('time');\n\n  user = new User(\n    userInfo.locations,\n    userInfo.currentLocIndex,\n    userInfo.currentDeg,\n  );\n\n  const timeNowRaw = new Date();\n  const timeNow = timeNowRaw.toISOString().split(':')[0];\n\n  console.log(`time now: ${timeNow}\\nlast user time: ${userTime}`); // DEBUGGING\n\n  if (timeNow !== userTime && user.locations.length) {\n    try {\n      refreshLocations();\n    } catch (error) {\n      console.log(`error on refresh: ${error}`);\n      renderAll();\n    }\n  } else {\n    renderAll();\n    console.log(user); // DEBUGGING\n  }\n} else {\n  console.log('creating new user'); // DEBUGGING\n\n  user = new User();\n  Events.emit('renderLocationList', user);\n  Events.emit('renderDegrees', user.currentDeg);\n\n  console.log(user); // DEBUGGING\n}\n\n// ------------------------- METHODS ------------------------- //\n\nfunction pushStorage() {\n  user.getUserTime();\n  localStorage.setItem('time', user.userTime);\n  localStorage.setItem('user', JSON.stringify(user));\n}\n\nfunction renderAll() {\n  Events.emit('renderLocationList', user);\n  Events.emit('showActiveLocation', user);\n  Events.emit('renderLocationWeather', user);\n  Events.emit('renderDegrees', user.currentDeg);\n}\n\nasync function refreshLocations() {\n  console.log('starting refresh'); // DEBUGGING\n\n  const locationPromises = user.locations.map((location) =>\n    WeatherAPI.getLocationData(location.name),\n  );\n  user.locations = await Promise.all(locationPromises);\n\n  pushStorage();\n  renderAll();\n\n  console.log('finished refresh'); // DEBUGGING\n  console.log(user); // DEBUGGING\n}\n\nasync function addLocation(locationStr) {\n  const newLocation = await WeatherAPI.getLocationData(locationStr);\n\n  user.addLocation(newLocation);\n  user.currentLocIndex = user.locations.length - 1;\n\n  pushStorage();\n  renderAll();\n\n  console.log('adding location'); // DEBUGGING\n  console.log(user); // DEBUGGING\n}\n\nfunction removeLocation(index) {\n  user.removeLocation(index);\n  user.currentLocIndex =\n    index <= user.currentLocIndex\n      ? (user.currentLocIndex -= 1)\n      : user.currentLocIndex;\n\n  // very roughly correcting current loc index if\n  // user deletes first location while it is selected with others present\n  if (user.currentLocIndex < 0 && Boolean(user.locations.length)) {\n    user.currentLocIndex = 0;\n  }\n\n  pushStorage();\n  renderAll();\n\n  console.log('removing location'); // DEBUGGING\n  console.log(user); // DEBUGGING\n}\n\nfunction moveToLocation(index) {\n  if (index !== user.currentLocIndex) {\n    user.currentLocIndex = index;\n\n    pushStorage();\n    Events.emit('showActiveLocation', user);\n    Events.emit('renderLocationWeather', user);\n\n    console.log(`switched location to index ${index}`); // DEBUGGING\n    console.log(user); // DEBUGGING\n  }\n}\n\nfunction toggleDegrees(deg) {\n  user.currentDeg = deg;\n\n  pushStorage();\n  Events.emit('showActiveLocation', user);\n  Events.emit('renderLocationWeather', user);\n\n  console.log(`toggled degrees to ${deg}`); // DEBUGGING\n  console.log(user); // DEBUGGING\n}\n\n// ---------------- bind custom events ---------------- //\n\nEvents.on('refreshLocations', refreshLocations);\nEvents.on('addLocation', addLocation);\nEvents.on('removeLocation', removeLocation);\nEvents.on('moveToLocation', moveToLocation);\nEvents.on('toggleDegrees', toggleDegrees);\n"],"names":["events","on","eventName","fn","push","emit","data","forEach","weatherApiKey","WeatherAPI","getLocationData","polishedLocation","weatherForecastParams","URLSearchParams","key","days","q","myRequest","Request","mode","response","fetch","rawData","json","error","cleanLocData","name","location","country","isDay","Boolean","current","is_day","currentTimeIndex","Number","localtime","split","currentCondition","condition","text","currentConditionIcon","icon","currentTempC","Math","round","temp_c","currentTempF","temp_f","hours","timeIndex","forecast","forecastday","hour","slice","map","item","hourObj","time","conditionIcon","tempC","tempF","getLocationOptions","rawLocationInput","weatherSearchParams","Set","searchInput","document","querySelector","searchResults","Search","renderLocationNames","value","length","locationNameArr","children","child","removeChild","locationStr","newItem","createElement","classList","add","innerText","appendChild","selectLocation","e","target","contains","Events","removeSearchResults","addEventListener","locationList","deleteButtonsList","Locations","renderLocationList","userObj","locations","locationObj","index","setAttribute","newDeleteButton","changeLocation","getAttribute","showActiveLocation","currentLocIndex","remove","deleteLocation","weatherMetaContainer","hourlyFrame","hourlyList","tempButtons","Hourly","renderLocationWeather","currentLocObj","currentTemp","currentDeg","innerHTML","trim","addHourDisplay","scrollLeft","currentDegFormat","newHour","timeDisplay","tempDisplay","itemIndex","toggleDegrees","button","renderDegrees","degStr","User","constructor","locationObjects","arguments","undefined","this","addLocation","processedLocObj","removeLocation","removalIndex","splice","refreshLocations","newLocationArr","getUserTime","appTimeRaw","Date","userTime","toISOString","user","localStorage","getItem","console","log","userInfo","JSON","parse","timeNow","renderAll","pushStorage","setItem","stringify","async","locationPromises","Promise","all","newLocation","deg"],"sourceRoot":""}