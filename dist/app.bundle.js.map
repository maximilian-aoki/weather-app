{"version":3,"file":"app.bundle.js","mappings":"mBAAA,MAAMA,EAAS,CAAC,EAGhB,SAASC,EAAGC,EAAWC,GACrBH,EAAOE,GAAaF,EAAOE,IAAc,GACzCF,EAAOE,GAAWE,KAAKD,EACzB,CAeA,SAASE,EAAKH,EAAWI,GACnBN,EAAOE,IACTF,EAAOE,GAAWK,SAASJ,IACzBA,EAAGG,EAAK,GAGd,CC3BA,MAEME,EAAgB,kCAEP,MAAMC,EAEnB,4BAAaC,CAAgBC,GAC3B,MAAMC,EAAwB,IAAIC,gBAAgB,CAChDC,IAAKN,EACLO,KAAM,EACNC,EAAGL,IAECM,EAAY,IAAIC,QAZM,8CAaAN,EAC1B,CACEO,KAAM,SAKV,IACE,MAAMC,QAAiBC,MAAMJ,GACvBK,QAAgBF,EAASG,OAE/B,OAAOd,GAAW,EAAuBa,EAC3C,CAAE,MAAOE,GACP,MAAQ,6BAA4BA,GACtC,CACF,CAGA,QAAO,CAAuBF,GAC5B,MAAMG,EAAe,CAAC,EAkBtB,OAhBAA,EAAaC,KAAQ,GAAEJ,EAAQK,SAASD,SAASJ,EAAQK,SAASC,UAClEH,EAAaI,MAAQC,QAAQR,EAAQS,QAAQC,QAC7CP,EAAaQ,iBAAmBC,OAC9BZ,EAAQK,SAASQ,UAAUC,MAAM,KAAK,GAAGA,MAAM,KAAK,IAEtDX,EAAaY,iBAAmBf,EAAQS,QAAQO,UAAUC,KAC1Dd,EAAae,qBAAuBlB,EAAQS,QAAQO,UAAUG,KAC9DhB,EAAaiB,aAAeC,KAAKC,MAAMtB,EAAQS,QAAQc,QACvDpB,EAAaqB,aAAeH,KAAKC,MAAMtB,EAAQS,QAAQgB,QAGvDtB,EAAauB,MAAQvC,GAAW,EAC9Ba,EACAG,EAAaQ,kBAGRR,CACT,CAGA,QAAO,CAAanB,EAAM2C,GAsBxB,MAhBoB,IALK3C,EAAK4C,SAASC,YAAY,GAAGC,KAAKC,MAAMJ,MACvC3C,EAAK4C,SAASC,YAAY,GAAGC,KAAKC,MAC1D,EACAJ,IAK2BK,KAAKC,IAChC,MAAMC,EAAU,CAAC,EASjB,OAPAA,EAAQP,UAAYf,OAAOqB,EAAKE,KAAKrB,MAAM,KAAK,GAAGA,MAAM,KAAK,IAC9DoB,EAAQ3B,MAAQC,QAAQyB,EAAKvB,QAC7BwB,EAAQlB,UAAYiB,EAAKjB,UAAUC,KACnCiB,EAAQE,cAAgBH,EAAKjB,UAAUG,KACvCe,EAAQG,MAAQhB,KAAKC,MAAMW,EAAKV,QAChCW,EAAQI,MAAQjB,KAAKC,MAAMW,EAAKR,QAEzBS,CAAO,GAIlB,CAGA,+BAAaK,CAAmBC,GAC9B,MAAMC,EAAsB,IAAIlD,gBAAgB,CAC9CC,IAAKN,EACLQ,EAAG8C,IAEC7C,EAAY,IAAIC,QApFI,4CAoF4B6C,EAAqB,CACzE5C,KAAM,SAIR,IACE,MAAMC,QAAiBC,MAAMJ,GACvBK,QAAgBF,EAASG,OAE/B,OAAOd,GAAW,EAAsBa,EAC1C,CAAE,MAAOE,GACP,MAAQ,gCAA+BA,GACzC,CACF,CAEA,QAAO,CAAsBF,GAC3B,MAAO,IAAI,IAAI0C,IAAI1C,EAAQgC,KAAKC,GAAU,GAAEA,EAAK7B,SAAS6B,EAAK3B,aACjE,ECjGF,MAAMqC,EAAcC,SAASC,cAAc,iBACrCC,EAAgBF,SAASC,cAAc,mBAE9B,MAAME,EACnB,gCAAaC,GACX,GAAIL,EAAYM,MAAMC,QAAU,EAAG,CAEjC,MAAMC,QAAwBhE,EAAWoD,mBACvCI,EAAYM,OAId,IAAIH,EAAcM,UAAUnE,SAASoE,GACnCP,EAAcQ,YAAYD,KAE5BF,EAAgBlE,QAAQ8D,GAAO,EACjC,KAEE,IAAID,EAAcM,UAAUnE,SAASoE,GACnCP,EAAcQ,YAAYD,IAGhC,CAEA,QAAO,CAAgBE,GACrB,MAAMC,EAAUZ,SAASa,cAAc,MACvCD,EAAQE,UAAUC,IAAI,YACtBH,EAAQI,UAAYL,EAEpBT,EAAce,YAAYL,EAC5B,CAEA,qBAAOM,CAAeC,GAChBA,EAAEC,OAAON,UAAUO,SAAS,aAC9BC,EAAY,cAAeH,EAAEC,OAAOJ,WACpCjB,EAAYM,MAAQ,GACpBF,EAAOC,uBACY,UAAVe,EAAEvE,KAAmBsD,EAAcqB,oBAC5CD,EAAY,cAAepB,EAAcqB,kBAAkBP,WAC3DjB,EAAYM,MAAQ,GACpBF,EAAOC,sBAEX,EAIFL,EAAYyB,iBAAiB,QAASrB,EAAOC,qBAC7CL,EAAYyB,iBAAiB,WAAYrB,EAAOe,gBAChDhB,EAAcsB,iBAAiB,QAASrB,EAAOe,gBCjD/C,MAAMO,EAAezB,SAASC,cAAc,mBAE7B,MAAMyB,EACnB,yBAAOC,CAAmBC,GACxB,IAAIH,EAAajB,UAAUnE,SAASoE,GAClCgB,EAAaf,YAAYD,KAG3BmB,EAAQC,UAAUxF,QAAQqF,GAAU,EACtC,CAEA,QAAO,CAAgBI,EAAaC,GAClC,MAAMnB,EAAUZ,SAASa,cAAc,MACvCD,EAAQE,UAAUC,IAAI,YACtBH,EAAQoB,aAAa,aAAcD,GACnCnB,EAAQI,UAAYc,EAAYtE,KAEhCiE,EAAaR,YAAYL,EAC3B,CAEA,qBAAOqB,CAAed,GACpBe,QAAQC,IAAInE,OAAOmD,EAAEC,OAAOgB,aAAa,eAC3C,EAIFX,EAAaD,iBAAiB,QAASE,EAAUO,gBAGjDX,EAAU,qBAAsBI,EAAUC,oBCjC3B,MAAMU,EACnBC,WAAAA,GAAwD,IAA5CC,EAAeC,UAAAlC,OAAA,QAAAmC,IAAAD,UAAA,GAAAA,UAAA,GAAG,GAAIE,EAAeF,UAAAlC,OAAA,QAAAmC,IAAAD,UAAA,GAAAA,UAAA,IAAI,EACnDG,KAAKd,UAAYU,EACjBI,KAAKD,gBAAkBA,CACzB,CAGAE,WAAAA,CAAYC,GACVF,KAAKd,UAAU3F,KAAK2G,EACtB,CAEAC,cAAAA,CAAeC,GACbJ,KAAKd,UAAUmB,OAAOD,EAAc,EACtC,CAEAE,gBAAAA,CAAiBC,GACfP,KAAKd,UAAYqB,CACnB,CAEAC,WAAAA,GACE,MAAMC,EAAa,IAAIC,KACvBV,KAAKW,SAAWF,EAAWG,cAAcrF,MAAM,KAAK,EACtD,ECTF,IAAIsF,EAEJ,GAAIC,aAAaC,QAAQ,QAAS,CAChCxB,QAAQC,IAAI,4CAEZ,MAAMwB,EAAWC,KAAKC,MAAMJ,aAAaC,QAAQ,SAC3CJ,EAAWG,aAAaC,QAAQ,QAEtCF,EAAO,IAAInB,EAAKsB,EAAS9B,UAAW8B,EAASjB,iBAE7C,MACMoB,GADa,IAAIT,MACIE,cAAcrF,MAAM,KAAK,GAIpD,GAFAgE,QAAQC,IAAK,aAAY2B,sBAA4BR,KAEjDQ,IAAYR,GAAYE,EAAK3B,UAAUvB,OACzC,IACE2C,GACF,CAAE,MAAO3F,GACP4E,QAAQC,IAAK,qBAAoB7E,IACnC,CAGFgE,EAAY,qBAAsBkC,EACpC,MACEtB,QAAQC,IAAI,qBAEZqB,EAAO,IAAInB,EACXH,QAAQC,IAAIqB,GAKd,SAASO,IACPP,EAAKL,cACLM,aAAaO,QAAQ,OAAQR,EAAKF,UAClCG,aAAaO,QAAQ,OAAQJ,KAAKK,UAAUT,GAC9C,CAEAU,eAAejB,IACbf,QAAQC,IAAI,oBAEZ,MAAMgC,EAAmBX,EAAK3B,UAAUzC,KAAK3B,GAC3ClB,EAAWC,gBAAgBiB,EAASD,QAEtCgG,EAAK3B,gBAAkBuC,QAAQC,IAAIF,GAEnCJ,IAEA7B,QAAQC,IAAI,oBACZD,QAAQC,IAAIqB,EACd,CA8BAlC,EAAU,eA5BV4C,eAA2BvD,GACzB,MAAM2D,QAAoB/H,EAAWC,gBAAgBmE,GAErD6C,EAAKZ,YAAY0B,GACjBd,EAAKd,gBAAkBc,EAAK3B,UAAUvB,OAAS,EAE/CyD,IACAzC,EAAY,qBAAsBkC,GAElCtB,QAAQC,IAAI,mBACZD,QAAQC,IAAIqB,EACd,IAkBAlC,EAAU,kBAhBV,SAAwBS,GACtByB,EAAKV,eAAef,GACpByB,EAAKd,gBACHX,GAASyB,EAAKd,gBACTc,EAAKd,iBAAmB,EACzBc,EAAKd,gBAEXqB,IAEA7B,QAAQC,IAAI,qBACZD,QAAQC,IAAIqB,EACd,IAMAlC,EAAU,mBAAoB2B,E","sources":["webpack://weather-app/./src/assets/Events.js","webpack://weather-app/./src/assets/WeatherAPI.js","webpack://weather-app/./src/assets/Search.js","webpack://weather-app/./src/assets/Locations.js","webpack://weather-app/./src/assets/User.js","webpack://weather-app/./src/index.js"],"sourcesContent":["const events = {};\n\n// create a new function for a new or existing event name (doesn’t check duplicates)\nfunction on(eventName, fn) {\n  events[eventName] = events[eventName] || [];\n  events[eventName].push(fn);\n}\n\n// remove an event name’s associated function (one instance in this e.g.)\nfunction off(eventName, fn) {\n  if (events[eventName]) {\n    for (let i = 0; i < events[eventName].length; i += 1) {\n      if (events[eventName][i] === fn) {\n        events[eventName].splice(i, 1);\n        break;\n      }\n    }\n  }\n}\n\n// emit a piece of data to all functions on one event name\nfunction emit(eventName, data) {\n  if (events[eventName]) {\n    events[eventName].forEach((fn) => {\n      fn(data);\n    });\n  }\n}\n\nexport { on, off, emit };\n","const weatherForecastEndpoint = 'http://api.weatherapi.com/v1/forecast.json?';\nconst weatherSearchEndpoint = 'http://api.weatherapi.com/v1/search.json?';\nconst weatherApiKey = 'f59714b9ced048d6b83171709230312';\n\nexport default class WeatherAPI {\n  // PUBLIC - use clean location to get all location weather data //\n  static async getLocationData(polishedLocation) {\n    const weatherForecastParams = new URLSearchParams({\n      key: weatherApiKey,\n      days: 2,\n      q: polishedLocation,\n    });\n    const myRequest = new Request(\n      weatherForecastEndpoint + weatherForecastParams,\n      {\n        mode: 'cors',\n      },\n    );\n\n    // fetch forecast //\n    try {\n      const response = await fetch(myRequest);\n      const rawData = await response.json();\n\n      return WeatherAPI.#cleanLocationForecast(rawData);\n    } catch (error) {\n      return `Error in getLocationData: ${error}`;\n    }\n  }\n\n  // PRIVATE - clean the raw monolith of data to useable custom properties //\n  static #cleanLocationForecast(rawData) {\n    const cleanLocData = {};\n\n    cleanLocData.name = `${rawData.location.name}, ${rawData.location.country}`;\n    cleanLocData.isDay = Boolean(rawData.current.is_day);\n    cleanLocData.currentTimeIndex = Number(\n      rawData.location.localtime.split(':')[0].split(' ')[1],\n    );\n    cleanLocData.currentCondition = rawData.current.condition.text;\n    cleanLocData.currentConditionIcon = rawData.current.condition.icon;\n    cleanLocData.currentTempC = Math.round(rawData.current.temp_c);\n    cleanLocData.currentTempF = Math.round(rawData.current.temp_f);\n\n    // pass in private hour array function //\n    cleanLocData.hours = WeatherAPI.#getLocHours(\n      rawData,\n      cleanLocData.currentTimeIndex,\n    );\n\n    return cleanLocData;\n  }\n\n  // PRIVATE - get an array of 24 hours starting at the current hour //\n  static #getLocHours(data, timeIndex) {\n    const hoursFirstDayRaw = data.forecast.forecastday[0].hour.slice(timeIndex);\n    const hoursSecondDayRaw = data.forecast.forecastday[1].hour.slice(\n      0,\n      timeIndex,\n    );\n    const hoursArrRaw = [...hoursFirstDayRaw, ...hoursSecondDayRaw];\n\n    // convert the raw array of hours to a custom array of obj //\n    const hoursArr = hoursArrRaw.map((item) => {\n      const hourObj = {};\n\n      hourObj.timeIndex = Number(item.time.split(':')[0].split(' ')[1]);\n      hourObj.isDay = Boolean(item.is_day);\n      hourObj.condition = item.condition.text;\n      hourObj.conditionIcon = item.condition.icon;\n      hourObj.tempC = Math.round(item.temp_c);\n      hourObj.tempF = Math.round(item.temp_f);\n\n      return hourObj;\n    });\n\n    return hoursArr;\n  }\n\n  // PUBLIC - use user location input to get array of potential matches in API //\n  static async getLocationOptions(rawLocationInput) {\n    const weatherSearchParams = new URLSearchParams({\n      key: weatherApiKey,\n      q: rawLocationInput,\n    });\n    const myRequest = new Request(weatherSearchEndpoint + weatherSearchParams, {\n      mode: 'cors',\n    });\n\n    // fetch search //\n    try {\n      const response = await fetch(myRequest);\n      const rawData = await response.json();\n\n      return WeatherAPI.#cleanLocationOptions(rawData);\n    } catch (error) {\n      return `Error in getLocationOptions: ${error}`;\n    }\n  }\n\n  static #cleanLocationOptions(rawData) {\n    return [...new Set(rawData.map((item) => `${item.name}, ${item.country}`))];\n  }\n}\n","// import modules\nimport WeatherAPI from './WeatherAPI';\nimport * as Events from './Events';\n\n// cache dom\nconst searchInput = document.querySelector('.search-input');\nconst searchResults = document.querySelector('.search-results');\n\nexport default class Search {\n  static async renderLocationNames() {\n    if (searchInput.value.length >= 3) {\n      // fetch search //\n      const locationNameArr = await WeatherAPI.getLocationOptions(\n        searchInput.value,\n      );\n\n      // delete and re-render elements //\n      [...searchResults.children].forEach((child) =>\n        searchResults.removeChild(child),\n      );\n      locationNameArr.forEach(Search.#renderListItem);\n    } else {\n      // delete elements //\n      [...searchResults.children].forEach((child) =>\n        searchResults.removeChild(child),\n      );\n    }\n  }\n\n  static #renderListItem(locationStr) {\n    const newItem = document.createElement('li');\n    newItem.classList.add('location');\n    newItem.innerText = locationStr;\n\n    searchResults.appendChild(newItem);\n  }\n\n  static selectLocation(e) {\n    if (e.target.classList.contains('location')) {\n      Events.emit('addLocation', e.target.innerText);\n      searchInput.value = '';\n      Search.renderLocationNames();\n    } else if (e.key === 'Enter' && searchResults.firstElementChild) {\n      Events.emit('addLocation', searchResults.firstElementChild.innerText);\n      searchInput.value = '';\n      Search.renderLocationNames();\n    }\n  }\n}\n\n// bind default events\nsearchInput.addEventListener('input', Search.renderLocationNames);\nsearchInput.addEventListener('keypress', Search.selectLocation);\nsearchResults.addEventListener('click', Search.selectLocation);\n","// import modules\nimport * as Events from './Events';\n\n// cache dom\nconst locationList = document.querySelector('.locations-list');\n\nexport default class Locations {\n  static renderLocationList(userObj) {\n    [...locationList.children].forEach((child) =>\n      locationList.removeChild(child),\n    );\n\n    userObj.locations.forEach(Locations.#renderListItem);\n  }\n\n  static #renderListItem(locationObj, index) {\n    const newItem = document.createElement('li');\n    newItem.classList.add('location');\n    newItem.setAttribute('data-index', index);\n    newItem.innerText = locationObj.name;\n\n    locationList.appendChild(newItem);\n  }\n\n  static changeLocation(e) {\n    console.log(Number(e.target.getAttribute('data-index')));\n  }\n}\n\n// bind default events\nlocationList.addEventListener('click', Locations.changeLocation);\n\n// bind custom events\nEvents.on('renderLocationList', Locations.renderLocationList);\n","export default class User {\n  constructor(locationObjects = [], currentLocIndex = -1) {\n    this.locations = locationObjects;\n    this.currentLocIndex = currentLocIndex;\n  }\n\n  // PUBLIC METHODS //\n  addLocation(processedLocObj) {\n    this.locations.push(processedLocObj);\n  }\n\n  removeLocation(removalIndex) {\n    this.locations.splice(removalIndex, 1);\n  }\n\n  refreshLocations(newLocationArr) {\n    this.locations = newLocationArr;\n  }\n\n  getUserTime() {\n    const appTimeRaw = new Date();\n    this.userTime = appTimeRaw.toISOString().split(':')[0];\n  }\n}\n","// import css\nimport './static/reset.css';\nimport './static/style.css';\n\n// import modules\nimport * as Events from './assets/Events';\nimport WeatherAPI from './assets/WeatherAPI';\nimport Search from './assets/Search';\nimport Locations from './assets/Locations';\nimport User from './assets/User';\n\n// ----------------------- INIT APP ----------------------- //\n\nlet user;\n\nif (localStorage.getItem('user')) {\n  console.log('getting user from localStorage with time'); // DEBUGGING\n\n  const userInfo = JSON.parse(localStorage.getItem('user'));\n  const userTime = localStorage.getItem('time');\n\n  user = new User(userInfo.locations, userInfo.currentLocIndex);\n\n  const timeNowRaw = new Date();\n  const timeNow = timeNowRaw.toISOString().split(':')[0];\n\n  console.log(`time now: ${timeNow}\\nlast user time: ${userTime}`); // DEBUGGING\n\n  if (timeNow === userTime && user.locations.length) {\n    try {\n      refreshLocations();\n    } catch (error) {\n      console.log(`error on refresh: ${error}`);\n    }\n  }\n\n  Events.emit('renderLocationList', user);\n} else {\n  console.log('creating new user'); // DEBUGGING\n\n  user = new User();\n  console.log(user); // DEBUGGING\n}\n\n// ------------------------- METHODS ------------------------- //\n\nfunction pushStorage() {\n  user.getUserTime();\n  localStorage.setItem('time', user.userTime);\n  localStorage.setItem('user', JSON.stringify(user));\n}\n\nasync function refreshLocations() {\n  console.log('starting refresh'); // DEBUGGING\n\n  const locationPromises = user.locations.map((location) =>\n    WeatherAPI.getLocationData(location.name),\n  );\n  user.locations = await Promise.all(locationPromises);\n\n  pushStorage();\n\n  console.log('finished refresh'); // DEBUGGING\n  console.log(user); // DEBUGGING\n}\n\nasync function addLocation(locationStr) {\n  const newLocation = await WeatherAPI.getLocationData(locationStr);\n\n  user.addLocation(newLocation);\n  user.currentLocIndex = user.locations.length - 1;\n\n  pushStorage();\n  Events.emit('renderLocationList', user);\n\n  console.log('adding location'); // DEBUGGING\n  console.log(user); // DEBUGGING\n}\n\nfunction removeLocation(index) {\n  user.removeLocation(index);\n  user.currentLocIndex =\n    index <= user.currentLocIndex\n      ? (user.currentLocIndex -= 1)\n      : user.currentLocIndex;\n\n  pushStorage();\n\n  console.log('removing location'); // DEBUGGING\n  console.log(user); // DEBUGGING\n}\n\n// ---------------- bind custom events ---------------- //\n\nEvents.on('addLocation', addLocation);\nEvents.on('removeLocation', removeLocation);\nEvents.on('refreshLocations', refreshLocations);\n"],"names":["events","on","eventName","fn","push","emit","data","forEach","weatherApiKey","WeatherAPI","getLocationData","polishedLocation","weatherForecastParams","URLSearchParams","key","days","q","myRequest","Request","mode","response","fetch","rawData","json","error","cleanLocData","name","location","country","isDay","Boolean","current","is_day","currentTimeIndex","Number","localtime","split","currentCondition","condition","text","currentConditionIcon","icon","currentTempC","Math","round","temp_c","currentTempF","temp_f","hours","timeIndex","forecast","forecastday","hour","slice","map","item","hourObj","time","conditionIcon","tempC","tempF","getLocationOptions","rawLocationInput","weatherSearchParams","Set","searchInput","document","querySelector","searchResults","Search","renderLocationNames","value","length","locationNameArr","children","child","removeChild","locationStr","newItem","createElement","classList","add","innerText","appendChild","selectLocation","e","target","contains","Events","firstElementChild","addEventListener","locationList","Locations","renderLocationList","userObj","locations","locationObj","index","setAttribute","changeLocation","console","log","getAttribute","User","constructor","locationObjects","arguments","undefined","currentLocIndex","this","addLocation","processedLocObj","removeLocation","removalIndex","splice","refreshLocations","newLocationArr","getUserTime","appTimeRaw","Date","userTime","toISOString","user","localStorage","getItem","userInfo","JSON","parse","timeNow","pushStorage","setItem","stringify","async","locationPromises","Promise","all","newLocation"],"sourceRoot":""}