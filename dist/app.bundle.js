(()=>{"use strict";const e={};function t(t,n){e[t]=e[t]||[],e[t].push(n)}function n(t,n){e[t]&&e[t].forEach((e=>{e(n)}))}const o="f59714b9ced048d6b83171709230312";class c{static async getLocationData(e){const t=new URLSearchParams({key:o,days:2,q:e}),n=new Request("http://api.weatherapi.com/v1/forecast.json?"+t,{mode:"cors"});try{const e=await fetch(n),t=await e.json();return c.#e(t)}catch(e){return`Error in getLocationData: ${e}`}}static#e(e){const t={};return t.name=`${e.location.name}, ${e.location.country}`,t.isDay=Boolean(e.current.is_day),t.currentTimeIndex=Number(e.location.localtime.split(":")[0].split(" ")[1]),t.currentCondition=e.current.condition.text,t.currentConditionIcon=e.current.condition.icon,t.currentTempC=Math.round(e.current.temp_c),t.currentTempF=Math.round(e.current.temp_f),t.hours=c.#t(e,t.currentTimeIndex),t}static#t(e,t){return[...e.forecast.forecastday[0].hour.slice(t),...e.forecast.forecastday[1].hour.slice(0,t)].map((e=>{const t={};return t.timeIndex=Number(e.time.split(":")[0].split(" ")[1]),t.isDay=Boolean(e.is_day),t.condition=e.condition.text,t.conditionIcon=e.condition.icon,t.tempC=Math.round(e.temp_c),t.tempF=Math.round(e.temp_f),t}))}static async getLocationOptions(e){const t=new URLSearchParams({key:o,q:e}),n=new Request("http://api.weatherapi.com/v1/search.json?"+t,{mode:"cors"});try{const e=await fetch(n),t=await e.json();return c.#n(t)}catch(e){return`Error in getLocationOptions: ${e}`}}static#n(e){return[...new Set(e.map((e=>`${e.name}, ${e.country}`)))]}}const r=document.querySelector(".search-input"),i=document.querySelector(".search-results");class a{static async renderLocationNames(){if(r.value.length>=3){const e=await c.getLocationOptions(r.value);[...i.children].forEach((e=>i.removeChild(e))),e.forEach(a.#o)}else[...i.children].forEach((e=>i.removeChild(e)))}static#o(e){const t=document.createElement("li");t.classList.add("result"),t.innerText=e,i.appendChild(t)}static selectLocation(e){e.target.classList.contains("result")&&(n("addLocation",e.target.innerText),a.removeSearchResults())}static async removeSearchResults(){r.value="",a.renderLocationNames()}}r.addEventListener("input",a.renderLocationNames),i.addEventListener("click",a.selectLocation);const s=document.querySelector(".locations-list"),l=document.querySelector(".delete-buttons-list");class d{static renderLocationList(e){[...s.children].forEach((e=>s.removeChild(e))),[...l.children].forEach((e=>l.removeChild(e))),e.locations.forEach(d.#o)}static#o(e,t){const n=document.createElement("li");n.classList.add("location"),n.setAttribute("data-index",t),n.innerText=e.name;const o=document.createElement("li");o.classList.add("delete-button"),o.setAttribute("data-index",t),o.innerText="x",s.appendChild(n),l.appendChild(o)}static changeLocation(e){"location"===e.target.getAttribute("class")&&n("moveToLocation",Number(e.target.getAttribute("data-index")))}static showActiveLocation(e){for(const t of[...s.children])Number(t.getAttribute("data-index"))===e.currentLocIndex?t.classList.add("active"):t.classList.remove("active")}static deleteLocation(e){"delete-button"===e.target.getAttribute("class")&&n("removeLocation",Number(e.target.getAttribute("data-index")))}}s.addEventListener("click",d.changeLocation),l.addEventListener("click",d.deleteLocation),t("renderLocationList",d.renderLocationList),t("showActiveLocation",d.showActiveLocation);const u=document.querySelector(".weather-meta-container"),m=document.querySelector(".hourly-frame"),g=document.querySelector(".hourly-list"),h=document.querySelector(".temp-buttons");class L{static renderLocationWeather(e){if(e.currentLocIndex>=0){const t=e.locations[e.currentLocIndex],n="C"===e.currentDeg?t.currentTempC:t.currentTempF;u.innerHTML=`\n        <div class="meta-text grid">\n          <div class="text-name">\n            <h3>${t.name.split(",")[0]}</h3>\n            <h4>${t.name.split(",")[1].trim()}</h4>\n          </div>\n          <div class="text-condition">\n            <h3>Current Condition:</h3>\n            <p>${t.currentCondition}</p>\n          </div>\n        </div>\n        <div class="meta-data grid">\n          <div class="data-icon grid">\n            <img\n              src="https://${t.currentConditionIcon}"\n            />\n          </div>\n          <div class="data-temp grid">\n            <p>\n              <span class="data-temp-num">${n}</span>\n              <sup>o</sup>\n              <span class="data-temp-system">${e.currentDeg}</span>\n            </p>\n          </div>\n        </div>\n        `,[...g.children].forEach((e=>g.removeChild(e))),t.hours.forEach(((t,n)=>{L.addHourDisplay(t,n,e.currentDeg)})),m.scrollLeft=0}else u.innerHTML="",[...g.children].forEach((e=>g.removeChild(e)))}static addHourDisplay(e,t,n){const o=document.createElement("li"),c=L.#c(e.timeIndex,t),r=L.#r(e,n);o.innerHTML=`\n    <div class="hourly-temp grid">\n      <p>\n        <span class="hour-temp-num">${r}</span>\n        <sup>o</sup>\n        <span class="hour-temp-system">${n}</span>\n      </p>\n    </div>\n    <div class="hourly-condition grid">\n      <img\n        src="https://${e.conditionIcon}"\n      />\n    </div>\n    <div class="hourly-time grid">\n      <p>${c}</p>\n    </div>\n    `,g.appendChild(o)}static#c(e,t){return 0===t?"Now":0===e?"12 AM":e<12?`${e} AM`:12===e?"12 PM":e-12+" PM"}static#r(e,t){return"C"===t?e.tempC:e.tempF}static toggleDegrees(e){e.target.classList.contains("button")&&!e.target.classList.contains("active")&&([...h.children].forEach((e=>{e.classList.remove("active")})),e.target.classList.add("active"),n("toggleDegrees",e.target.innerText))}static renderDegrees(e){[...h.children].forEach((t=>{t.classList.remove("active"),t.innerText===e&&t.classList.add("active")}))}}h.addEventListener("click",L.toggleDegrees),t("renderLocationWeather",L.renderLocationWeather),t("renderDegrees",L.renderDegrees);class p{constructor(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:[],t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:-1,n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"C";this.locations=e,this.currentLocIndex=t,this.currentDeg=n}addLocation(e){this.locations.push(e)}removeLocation(e){this.locations.splice(e,1)}refreshLocations(e){this.locations=e}getUserTime(){const e=new Date;this.userTime=e.toISOString().split(":")[0]}}let v;if(localStorage.getItem("user")){console.log("getting user from localStorage with time");const e=JSON.parse(localStorage.getItem("user")),t=localStorage.getItem("time");v=new p(e.locations,e.currentLocIndex,e.currentDeg);const n=(new Date).toISOString().split(":")[0];if(console.log(`time now: ${n}\nlast user time: ${t}`),n!==t&&v.locations.length)try{x()}catch(e){console.log(`error on refresh: ${e}`),y()}else y(),console.log(v)}else console.log("creating new user"),v=new p,n("renderLocationList",v),n("renderDegrees",v.currentDeg),console.log(v);function f(){v.getUserTime(),localStorage.setItem("time",v.userTime),localStorage.setItem("user",JSON.stringify(v))}function y(){n("renderLocationList",v),n("showActiveLocation",v),n("renderLocationWeather",v),n("renderDegrees",v.currentDeg)}async function x(){console.log("starting refresh");const e=v.locations.map((e=>c.getLocationData(e.name)));v.locations=await Promise.all(e),f(),y(),console.log("finished refresh"),console.log(v)}t("refreshLocations",x),t("addLocation",(async function(e){const t=await c.getLocationData(e);v.addLocation(t),v.currentLocIndex=v.locations.length-1,f(),y(),console.log("adding location"),console.log(v)})),t("removeLocation",(function(e){v.removeLocation(e),v.currentLocIndex=e<=v.currentLocIndex?v.currentLocIndex-=1:v.currentLocIndex,v.currentLocIndex<0&&Boolean(v.locations.length)&&(v.currentLocIndex=0),f(),y(),console.log("removing location"),console.log(v)})),t("moveToLocation",(function(e){e!==v.currentLocIndex&&(v.currentLocIndex=e,f(),n("showActiveLocation",v),n("renderLocationWeather",v),console.log(`switched location to index ${e}`),console.log(v))})),t("toggleDegrees",(function(e){v.currentDeg=e,f(),n("showActiveLocation",v),n("renderLocationWeather",v),console.log(`toggled degrees to ${e}`),console.log(v)}))})();
//# sourceMappingURL=app.bundle.js.map